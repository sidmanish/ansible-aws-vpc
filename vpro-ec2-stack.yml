---
- name: Setup Vprofile Stack
  hosts: localhost
  connection: local
  gather_facts: no 
  tasks:
    - name: Import VPC setup variables
      include_vars: vars/output_vars

    - name: Import vprofile-setup variables
      include_vars: vars/vprostacksetup

    - name: Create Vprofile ec2 key
      ec2_key:
        name: vprokey 
        region: "{{region}}"
      register: vprokey_out

    - name: Save Private key info to loginkey_vpro.pem
      copy:
        content: "{{vprokey_out.key.private_key}}"
        dest: "./loginkey_vpro.pem"
        mode: 0600
      when: vprokey_out.changed

    - name: Create security Group for Load Balancer
      ec2_group:
        name: vproELB-sg
        description: allow port 80 from everywhere and all port within sg 
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELBSG_out

    - name: Create security Group for Vprofile Stack
      ec2_group:
        name: vproStack-sg
        description: allow port 22 from bastion host and all 80 from load balancer 
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG_out.group_id}}"
            
          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionSGid}}"
      register: vproStackSG_out
    
    - name: update security rules with its own id 
      ec2_group:
        name: vproStack-sg
        description: allow port 
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vproStackSG_out.group_id}}"

    - name: Create Nginx web01
      ec2: 
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: VProfile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: VProfile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out  
    
    - name: Create Tomcat app01
      ec2: 
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomact_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: VProfile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: VProfile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out 


    - name: Create memechache mc01
      ec2: 
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memecache_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mc01"
          Project: VProfile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: VProfile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mc01_out  


    
    - name: Create rabbitmq rmq01
      ec2: 
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "rmq01"
          Project: VProfile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "rmq01"
          Project: VProfile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: rmq01_out 



    - name: Create MySQL db01
      ec2: 
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: VProfile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: VProfile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: db01_out 

    - debug:
        var: db01_out



    